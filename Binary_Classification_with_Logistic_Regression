{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91719,"databundleVersionId":12937777,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:27.984623Z","iopub.execute_input":"2025-08-22T16:09:27.984840Z","iopub.status.idle":"2025-08-22T16:09:30.280860Z","shell.execute_reply.started":"2025-08-22T16:09:27.984819Z","shell.execute_reply":"2025-08-22T16:09:30.279909Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, average_precision_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ntest = pd.read_csv('/kaggle/input/playground-series-s5e8/test.csv')\ntrain = pd.read_csv('/kaggle/input/playground-series-s5e8/train.csv')\nsample_submission = pd.read_csv('/kaggle/input/playground-series-s5e8/sample_submission.csv')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:30.281644Z","iopub.execute_input":"2025-08-22T16:09:30.282012Z","iopub.status.idle":"2025-08-22T16:09:35.693995Z","shell.execute_reply.started":"2025-08-22T16:09:30.281980Z","shell.execute_reply":"2025-08-22T16:09:35.693245Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"col_count = {}\nfor col in train.columns:\n    col_count[col] = train[col].value_counts().shape[0]\ncol_count    ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:35.696260Z","iopub.execute_input":"2025-08-22T16:09:35.696585Z","iopub.status.idle":"2025-08-22T16:09:36.330693Z","shell.execute_reply.started":"2025-08-22T16:09:35.696563Z","shell.execute_reply":"2025-08-22T16:09:36.329911Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:36.331449Z","iopub.execute_input":"2025-08-22T16:09:36.331655Z","iopub.status.idle":"2025-08-22T16:09:36.689198Z","shell.execute_reply.started":"2025-08-22T16:09:36.331637Z","shell.execute_reply":"2025-08-22T16:09:36.688276Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 2. Define column groups\nnumeric_features = [\"age\", \"balance\", \"day\", \"duration\", \"campaign\", \"pdays\", \"previous\"]\ncategorical_features = [\"job\", \"marital\", \"education\", \"default\", \"housing\", \"loan\", \"contact\", \"month\", \"poutcome\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:36.690021Z","iopub.execute_input":"2025-08-22T16:09:36.690244Z","iopub.status.idle":"2025-08-22T16:09:36.695246Z","shell.execute_reply.started":"2025-08-22T16:09:36.690226Z","shell.execute_reply":"2025-08-22T16:09:36.694207Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"Corr_matrix = train[numeric_features].corr()\nCorr_matrix","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:36.696231Z","iopub.execute_input":"2025-08-22T16:09:36.696558Z","iopub.status.idle":"2025-08-22T16:09:36.883697Z","shell.execute_reply.started":"2025-08-22T16:09:36.696528Z","shell.execute_reply":"2025-08-22T16:09:36.882981Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sns.heatmap(Corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\nplt.title('Correlation Matrix Heatmap')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:36.884506Z","iopub.execute_input":"2025-08-22T16:09:36.884738Z","iopub.status.idle":"2025-08-22T16:09:37.368060Z","shell.execute_reply.started":"2025-08-22T16:09:36.884720Z","shell.execute_reply":"2025-08-22T16:09:37.367082Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# prep Train Data\ntrain = train.drop(columns = ['id'])\nX = train.drop(columns = ['y'])\ny = train['y']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:37.368995Z","iopub.execute_input":"2025-08-22T16:09:37.369314Z","iopub.status.idle":"2025-08-22T16:09:37.542831Z","shell.execute_reply.started":"2025-08-22T16:09:37.369280Z","shell.execute_reply":"2025-08-22T16:09:37.542063Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Prep Test data \nids = test['id']\nX_test = test.drop(columns = ['id'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:37.545373Z","iopub.execute_input":"2025-08-22T16:09:37.545682Z","iopub.status.idle":"2025-08-22T16:09:37.576580Z","shell.execute_reply.started":"2025-08-22T16:09:37.545641Z","shell.execute_reply":"2025-08-22T16:09:37.575794Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 0.3, stratify = y, random_state=4921)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:37.577305Z","iopub.execute_input":"2025-08-22T16:09:37.577568Z","iopub.status.idle":"2025-08-22T16:09:38.083903Z","shell.execute_reply.started":"2025-08-22T16:09:37.577548Z","shell.execute_reply":"2025-08-22T16:09:38.083011Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"preprocessor = ColumnTransformer(\n    transformers = [\n        (\"num\", StandardScaler(), numeric_features),\n        (\"cat\", OneHotEncoder(handle_unknown=\"ignore\"), categorical_features),\n    ]\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:38.084830Z","iopub.execute_input":"2025-08-22T16:09:38.085087Z","iopub.status.idle":"2025-08-22T16:09:38.089924Z","shell.execute_reply.started":"2025-08-22T16:09:38.085068Z","shell.execute_reply":"2025-08-22T16:09:38.089012Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"clf = Pipeline([\n    (\"preprocessor\", preprocessor),\n    (\"model\", LogisticRegression(max_iter=1000, class_weight=\"balanced\"))\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:38.090908Z","iopub.execute_input":"2025-08-22T16:09:38.091374Z","iopub.status.idle":"2025-08-22T16:09:38.108907Z","shell.execute_reply.started":"2025-08-22T16:09:38.091343Z","shell.execute_reply":"2025-08-22T16:09:38.107699Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Train model\nclf.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:38.109669Z","iopub.execute_input":"2025-08-22T16:09:38.109993Z","iopub.status.idle":"2025-08-22T16:09:46.334580Z","shell.execute_reply.started":"2025-08-22T16:09:38.109973Z","shell.execute_reply":"2025-08-22T16:09:46.333888Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Eval on validation split\ny_pred = clf.predict(X_val)\ny_proba = clf.predict_proba(X_val)[:,1]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:46.335210Z","iopub.execute_input":"2025-08-22T16:09:46.335496Z","iopub.status.idle":"2025-08-22T16:09:47.661125Z","shell.execute_reply.started":"2025-08-22T16:09:46.335473Z","shell.execute_reply":"2025-08-22T16:09:47.660388Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Classification Report:\")\nprint(classification_report(y_val, y_pred))\nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_val, y_pred))\nprint(\"ROC AUC:\", roc_auc_score(y_val, y_proba))\nprint(\"PR AUC:\", average_precision_score(y_val, y_proba))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:47.661993Z","iopub.execute_input":"2025-08-22T16:09:47.662286Z","iopub.status.idle":"2025-08-22T16:09:48.177420Z","shell.execute_reply.started":"2025-08-22T16:09:47.662258Z","shell.execute_reply":"2025-08-22T16:09:48.176407Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Predict prob for submission:\ny_test_proba = clf.predict_proba(X_test)[:,1]\n\nsubmission = pd.DataFrame({\n    'id': ids, \n    'y': y_test_proba\n})\nsubmission.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:48.178260Z","iopub.execute_input":"2025-08-22T16:09:48.178511Z","iopub.status.idle":"2025-08-22T16:09:48.929710Z","shell.execute_reply.started":"2025-08-22T16:09:48.178492Z","shell.execute_reply":"2025-08-22T16:09:48.928987Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# convert sol to csv\nsubmission.to_csv('submission.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T16:09:48.930508Z","iopub.execute_input":"2025-08-22T16:09:48.930798Z","iopub.status.idle":"2025-08-22T16:09:49.612523Z","shell.execute_reply.started":"2025-08-22T16:09:48.930772Z","shell.execute_reply":"2025-08-22T16:09:49.611762Z"}},"outputs":[],"execution_count":null}]}